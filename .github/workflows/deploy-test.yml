name: ðŸš€ [CICD í…ŒìŠ¤íŠ¸...]

on:
  push:
    branches: [main]

concurrency:
  group: deploy-test
  cancel-in-progress: true

env:
  APP_ENV: local
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: my-backend-test
  CONTAINER_NAME: my-container-for-ecs
  ECS_CLUSTER: my_ecs_cluster
  ECS_SERVICE: my_ecs_service
  ECS_TASK_DEFINITION: ./deploy/task-definition.json
  IMAGE_PATH: 866611624080.dkr.ecr.ap-northeast-2.amazonaws.com/my-backend-test:${{ github.sha }}

jobs:
  build:
    name: build
    environment: dev
    runs-on: ubuntu-latest
    steps:
      - name: ðŸŸ¢ Checkout
        uses: actions/checkout@v3

      - name: ðŸŸ¢ AWS Authenticate
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: ðŸŸ¢ Amazon ECR Login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
#
      - name: ðŸŸ¢ Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: ðŸŸ¢ Build, tag, and push the image to Amazon ECR
        id: build-image
        uses: docker/build-push-action@v4
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        with:
          context: .
          file: ./deploy/Dockerfile
          push: true
          build-args: |
            APP_ENV=${{ env.APP_ENV }}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          tags: ${{ env.IMAGE_PATH }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: deploy
    environment: dev
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: ðŸŸ¢ Checkout
        uses: actions/checkout@v3

      - name: ðŸŸ¢ AWS Authenticate
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: ðŸŸ¢ Update new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ env.IMAGE_PATH }}

      - name: ðŸŸ¢ Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
