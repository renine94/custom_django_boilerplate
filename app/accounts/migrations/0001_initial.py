# Generated by Django 4.1.6 on 2023-02-09 11:27

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="SignUpPhoneCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성일"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="수정일")),
                ("phone_number", models.CharField(max_length=11, verbose_name="휴대폰번호")),
                (
                    "confirm_code",
                    models.CharField(max_length=6, verbose_name="회원가입시 전송한 코드"),
                ),
                (
                    "is_confirm",
                    models.BooleanField(default=False, verbose_name="인증완료 여부"),
                ),
            ],
            options={
                "db_table": "accounts_signup_phone_code",
                "unique_together": {("phone_number", "confirm_code")},
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성일"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="수정일")),
                (
                    "email",
                    models.EmailField(max_length=254, unique=True, verbose_name="이메일"),
                ),
                ("nickname", models.CharField(max_length=20, verbose_name="닉네임")),
                ("name", models.CharField(max_length=30, verbose_name="이름")),
                (
                    "phone_number",
                    models.CharField(
                        max_length=11,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                regex="^01([0|1|6|7|8|9]?)-?([0-9]{3,4})-?([0-9]{4})$"
                            )
                        ],
                        verbose_name="핸드폰번호",
                    ),
                ),
                (
                    "confirm_code",
                    models.CharField(
                        max_length=6, null=True, unique=True, verbose_name="인증코드"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="활성유저 여부"),
                ),
                ("is_staff", models.BooleanField(default=False, verbose_name="직원 여부")),
                (
                    "is_superuser",
                    models.BooleanField(default=False, verbose_name="관리자 여부"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
